{% import 'resources/public_ip.json.j2' as res_pip %}
{% import 'resources/vnet.json.j2' as res_vnet %}
{% import 'resources/load_balancer.json.j2' as res_lb %}
{% import 'resources/storage_account.json.j2' as res_sa %}
{% import 'resources/vm.json.j2' as res_vm %}
{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {},
    "variables": {
      "diagStorageAccountName": "[concat('diag',uniqueString(resourceGroup().id))]"
    },
    "resources": [
        {{ res_sa.storage_account(name="[variables('diagStorageAccountName')]", location=azure_location, display_name='Diagnostics Storage', account_type='Standard_LRS') }},
        {{ res_vnet.vnet('main', location=azure_location) }},

{% for load_balancer_type, load_balancer_spec in azure_lb.items() %}

{% if load_balancer_spec.public_ip %}
{% if load_balancer_spec.dns_name %}
        {{ res_pip.public_ip(load_balancer_type + 'pip', location=azure_location, dns_name=load_balancer_spec.dns_name) }},
{% else %}
        {{ res_pip.public_ip(load_balancer_type + 'pip', location=azure_location) }},
{% endif %}
{% endif %}

        {{ res_lb.load_balancer(
                name=load_balancer_type,
                ports=load_balancer_spec.ports,
                probes=load_balancer_spec.probes,
                depends_vnet=res_vnet.depends_vnet('main'),
                public_ip=load_balancer_spec.public_ip,
                id_public_ip=res_pip.id_public_ip(load_balancer_type + 'pip'),
                depends_public_ip=res_pip.depends_public_ip(load_balancer_type + 'pip'),
                private_ip=load_balancer_spec.private_ip,
                id_subnet=res_vnet.id_subnet('main', load_balancer_spec.subnet),
                location=azure_location
           )
        }},

{% endfor %}

{% for machine_type, machine_spec in azure_machine_spec.items() %}

{{ res_vm.virtual_machine(
        machine_type=machine_type,
        location=azure_location,
        machine_spec=machine_spec,
        nsg_spec=azure_nsg[machine_type],
        operating_system=azure_os_choices[machine_spec.os],
        ssh_keys=azure_ssh_keys
   )
}}
{% if not loop.last %},{% endif %}
{% endfor %}
    ]
}